name: E2E
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
permissions:
  id-token: write
  contents: read
env:
  GOPATH: /home/runner/go/
  GOBIN: /home/runner/go/bin
  PLURAL_LOGIN_AFFIRM_CURRENT_USER: true
  PLURAL_UP_AFFIRM_DEPLOY: true
  TESTOUT_PATH: /home/runner/testout
  SSH_PATH: /home/runner/.ssh
  VENOM_PATH: /usr/local/bin/venom
  VENOM_VAR_pluralHome: /home/runner/.plural
  VENOM_VAR_directory: /home/runner/testout/azure
  VENOM_VAR_gitRepo: git@github.com:pluralsh/plural-cli-e2e.git
  VENOM_VAR_gitRepoPrivateKeyPath: /home/runner/.ssh/id_rsa
#  E2E_GCP_SA_KEY_FILE: /home/runner/google_sa.json
jobs:
  plural-up-gcp:
    name: plural up / GCP
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Store test timestamp
        run: echo "TIMESTAMP=$(date +'%s')" >> $GITHUB_ENV
      - name: Setup test repository SSH key
        run: |
          mkdir -p ${{ env.SSH_PATH }}
          (base64 -d <<< ${{ secrets.E2E_REPO_PRIVATE_KEY }}) > ${{ env.VENOM_VAR_gitRepoPrivateKeyPath }}
          chmod 600 ${{ env.VENOM_VAR_gitRepoPrivateKeyPath }}
          eval "$(ssh-agent -s)"
          ssh-add ${{ env.VENOM_VAR_gitRepoPrivateKeyPath }}
#      - name: Decode and save Google service account to a file/env var
#        run: (base64 -d <<< ${{ secrets.E2E_GCP_SA_KEY }}) > ${{ env.E2E_GCP_SA_KEY_FILE }}
      - name: GCloud Auth
        uses: 'google-github-actions/auth@v2'
        with:
          project_id: 657418122889
          workload_identity_provider: "projects/657418122889/locations/global/workloadIdentityPools/github/providers/github"
      - name: Setup Go
        uses: actions/setup-go@v4.1.0
        with:
          go-version-file: go.mod
      - name: Add GOBIN to PATH
        run: echo $GOBIN >> $GITHUB_PATH
      - name: Setup Venom
        run: |
          curl https://github.com/ovh/venom/releases/download/v1.2.0/venom.linux-amd64 -L -o ${{ env.VENOM_PATH }}
          chmod +x ${{ env.VENOM_PATH }}
          venom version
      - name: Setup Plural CLI
        run: |
          make install-cli
          mkdir -p ${{ env.VENOM_VAR_pluralHome }}
          plural version
      - name: Print Terraform version
        run: terraform --version
      - name: Print Google Cloud CLI version
        run: gcloud --version
      - name: Create Google Project
        run: gcloud -q projects create plural-e2e-ci-test --name="E2E Debug" --organization=${{ secrets.E2E_GCP_ORG_ID }} --labels=type=e2e
#      - name: Run tests
#        env:
#          VENOM_VAR_provider: gcp
#          VENOM_VAR_region: us-central1
#          VENOM_VAR_gcpEmail: ${{ secrets.E2E_GCP_EMAIL }}
#          # VENOM_VAR_gcpSAKeyFile: ${{ secrets.E2E_GCP_SA_KEY_FILE }}
#          VENOM_VAR_gcpOrgID: ${{ secrets.E2E_GCP_ORG_ID }}
#          VENOM_VAR_gcpBillingID: ${{ secrets.E2E_GCP_BILLING_ID }}
#          VENOM_VAR_project: e2e-${{ env.TIMESTAMP }}
#          VENOM_VAR_branch: e2e-${{ env.TIMESTAMP }}-gcp
#          VENOM_VAR_username: ${{ secrets.E2E_GCP_SA_USERNAME }}
#          VENOM_VAR_email: ${{ secrets.E2E_GCP_SA_EMAIL }}
#          VENOM_VAR_token: ${{ secrets.E2E_GCP_SA_TOKEN }}
#        run: venom run -vv --html-report --format=json --output-dir ${{ env.TESTOUT_PATH }} test/plural
#      - name: Post a slack message on finish
#        uses: slackapi/slack-github-action@v2.0.0
#        with:
#          webhook-type: incoming-webhook
#          webhook: ${{ secrets.SLACK_WEBHOOK }}
#          payload: |
#            text: "*GitHub Action build result*: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
#            blocks:
#            - type: "section"
#              text:
#                type: "mrkdwn"
#                text: "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
#        if: always()
#      - name: Upload venom logs on failure
#        uses: slackapi/slack-github-action@v2.0.0
#        with:
#          method: files.uploadV2
#          token: ${{ secrets.SLACK_BOT_TOKEN }}
#          payload: |
#            {
#              "channel_id": "${{ secrets.SLACK_CHANNEL_ID }}" ,
#              "initial_comment": "Google e2e test has failed. Here are the generated files.",
#              "file_uploads": [
#                {
#                  "file": "${{ env.TESTOUT_PATH }}/venom.log",
#                  "filename": "venom.log"
#                },
#                {
#                  "file": "${{ env.TESTOUT_PATH }}/test_results.html",
#                  "filename": "rest_results.html"
#                }
#              ]
#            }
#        if: failure()
  plural-up-azure:
    name: plural up / Azure
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Store test timestamp
        run: echo "TIMESTAMP=$(date +'%s')" >> $GITHUB_ENV
      - name: Setup test repository SSH key
        run: |
          mkdir -p ${{ env.SSH_PATH }}
          (base64 -d <<< ${{ secrets.E2E_REPO_PRIVATE_KEY }}) >> ${{ env.VENOM_VAR_gitRepoPrivateKeyPath }}
          chmod 600 ${{ env.VENOM_VAR_gitRepoPrivateKeyPath }}
          eval "$(ssh-agent -s)"
          ssh-add ${{ env.VENOM_VAR_gitRepoPrivateKeyPath }}
      - name: Setup Go
        uses: actions/setup-go@v4.1.0
        with:
          go-version-file: go.mod
      - name: Add GOBIN to PATH
        run: echo $GOBIN >> $GITHUB_PATH
      - name: Setup Venom
        run: |
          curl https://github.com/ovh/venom/releases/download/v1.2.0/venom.linux-amd64 -L -o ${{ env.VENOM_PATH }}
          chmod +x ${{ env.VENOM_PATH }}
          venom version
      - name: Setup Plural CLI
        run: |
          make install-cli
          mkdir -p ${{ env.VENOM_VAR_pluralHome }}
          plural version
      - name: Print Terraform version
        run: terraform --version
      - name: Print Azure CLI version
        run: az --version
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.E2E_AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.E2E_AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.E2E_AZURE_SUBSCRIPTION_ID }}
      - name: Run tests
        env:
          VENOM_VAR_provider: azure
          VENOM_VAR_region: polandcentral
          VENOM_VAR_azureTenantId: ${{ secrets.E2E_AZURE_TENANT_ID }}
          VENOM_VAR_azureSubscriptionId: ${{ secrets.E2E_AZURE_SUBSCRIPTION_ID }}
          VENOM_VAR_azureStorageAccount: e2e${{ env.TIMESTAMP }}
          VENOM_VAR_project: e2e-${{ env.TIMESTAMP }}
          VENOM_VAR_branch: e2e-${{ env.TIMESTAMP }}-azure
          VENOM_VAR_username: ${{ secrets.E2E_AZURE_SA_USERNAME }}
          VENOM_VAR_email: ${{ secrets.E2E_AZURE_SA_EMAIL }}
          VENOM_VAR_token: ${{ secrets.E2E_AZURE_SA_TOKEN }}
        run: |
          # Create resource group and storage account
          az group create --name ${{ env.VENOM_VAR_project }} --location ${{ env.VENOM_VAR_region }}
          az storage account create --name ${{ env.VENOM_VAR_azureStorageAccount }} --resource-group ${{ env.VENOM_VAR_project }} --location ${{ env.VENOM_VAR_region }} --sku Standard_LRS --kind StorageV2
          
          # Export access key that is required to authenticate to Terraform azurerm backend
          export ARM_ACCESS_KEY=$(az storage account keys list --resource-group ${{ env.VENOM_VAR_project }} --account-name ${{ env.VENOM_VAR_azureStorageAccount }} --query '[0].value' -o tsv)
          
          # Run tests
          venom run -vv --html-report --format=json --output-dir ${{ env.TESTOUT_PATH }} test/plural
      - name: Post status on Slack
        uses: slackapi/slack-github-action@v2.0.0
        with:
          webhook-type: incoming-webhook
          webhook: ${{ secrets.SLACK_WEBHOOK }}
          payload: |
            text: "*E2E / plural up / Azure*: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
            blocks:
            - type: "section"
              text:
                type: "mrkdwn"
                text: "E2E / plural up / Azure: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
        if: always()
      - name: Upload artifacts to Slack on failure
        uses: slackapi/slack-github-action@v2.0.0
        with:
          method: files.uploadV2
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          payload: |
            {
              "channel_id": "${{ secrets.SLACK_CHANNEL_ID }}" ,
              "initial_comment": "`plural up` E2E tests on Azure have failed.",
              "file_uploads": [
                {
                  "file": "${{ env.TESTOUT_PATH }}/venom.log",
                  "filename": "venom.log"
                },
                {
                  "file": "${{ env.TESTOUT_PATH }}/test_results.html",
                  "filename": "rest_results.html"
                }
              ]
            }
        if: failure()
